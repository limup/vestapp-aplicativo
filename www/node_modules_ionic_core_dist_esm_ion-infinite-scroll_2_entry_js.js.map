{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/index-c4b11676.js","./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printRequiredElementError as a, printIonError as b, printIonWarning as p };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, f as readTask, h, i as getElement, H as Host } from './index-1a99aeb7.js';\nimport { b as getIonMode, c as config } from './ionic-global-04e268e7.js';\nimport { f as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index-3413f7be.js';\nimport { s as sanitizeDOMString } from './index-dff497fb.js';\nimport './helpers-4d272360.js';\nimport './index-c4b11676.js';\n\nconst infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\n\nconst InfiniteScroll = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n    this.thrPx = 0;\n    this.thrPc = 0;\n    this.didFire = false;\n    this.isBusy = false;\n    this.isLoading = false;\n    /**\n     * The threshold distance from the bottom\n     * of the content to call the `infinite` output event when scrolled.\n     * The threshold value can be either a percent, or\n     * in pixels. For example, use the value of `10%` for the `infinite`\n     * output event to get called when the user has scrolled 10%\n     * from the bottom of the page. Use the value `100px` when the\n     * scroll is within 100 pixels from the bottom of the page.\n     */\n    this.threshold = '15%';\n    /**\n     * If `true`, the infinite scroll will be hidden and scroll event listeners\n     * will be removed.\n     *\n     * Set this to true to disable the infinite scroll from actively\n     * trying to receive new data while scrolling. This is useful\n     * when it is known that there is no more data that can be added, and\n     * the infinite scroll is no longer needed.\n     */\n    this.disabled = false;\n    /**\n     * The position of the infinite scroll element.\n     * The value can be either `top` or `bottom`.\n     */\n    this.position = 'bottom';\n    this.onScroll = () => {\n      const scrollEl = this.scrollEl;\n      if (!scrollEl || !this.canStart()) {\n        return 1;\n      }\n      const infiniteHeight = this.el.offsetHeight;\n      if (infiniteHeight === 0) {\n        // if there is no height of this element then do nothing\n        return 2;\n      }\n      const scrollTop = scrollEl.scrollTop;\n      const scrollHeight = scrollEl.scrollHeight;\n      const height = scrollEl.offsetHeight;\n      const threshold = this.thrPc !== 0 ? height * this.thrPc : this.thrPx;\n      const distanceFromInfinite = this.position === 'bottom'\n        ? scrollHeight - infiniteHeight - scrollTop - threshold - height\n        : scrollTop - infiniteHeight - threshold;\n      if (distanceFromInfinite < 0) {\n        if (!this.didFire) {\n          this.isLoading = true;\n          this.didFire = true;\n          this.ionInfinite.emit();\n          return 3;\n        }\n      }\n      else {\n        this.didFire = false;\n      }\n      return 4;\n    };\n  }\n  thresholdChanged() {\n    const val = this.threshold;\n    if (val.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = parseFloat(val) / 100;\n    }\n    else {\n      this.thrPx = parseFloat(val);\n      this.thrPc = 0;\n    }\n  }\n  disabledChanged() {\n    const disabled = this.disabled;\n    if (disabled) {\n      this.isLoading = false;\n      this.isBusy = false;\n    }\n    this.enableScrollEvents(!disabled);\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    this.scrollEl = await getScrollElement(contentEl);\n    this.thresholdChanged();\n    this.disabledChanged();\n    if (this.position === 'top') {\n      writeTask(() => {\n        if (this.scrollEl) {\n          this.scrollEl.scrollTop = this.scrollEl.scrollHeight - this.scrollEl.clientHeight;\n        }\n      });\n    }\n  }\n  disconnectedCallback() {\n    this.enableScrollEvents(false);\n    this.scrollEl = undefined;\n  }\n  /**\n   * Call `complete()` within the `ionInfinite` output event handler when\n   * your async operation has completed. For example, the `loading`\n   * state is while the app is performing an asynchronous operation,\n   * such as receiving more data from an AJAX request to add more items\n   * to a data list. Once the data has been received and UI updated, you\n   * then call this method to signify that the loading has completed.\n   * This method will change the infinite scroll's state from `loading`\n   * to `enabled`.\n   */\n  async complete() {\n    const scrollEl = this.scrollEl;\n    if (!this.isLoading || !scrollEl) {\n      return;\n    }\n    this.isLoading = false;\n    if (this.position === 'top') {\n      /**\n       * New content is being added at the top, but the scrollTop position stays the same,\n       * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n       * (Frame 1)\n       *    - complete() is called, but the UI hasn't had time to update yet.\n       *    - Save the current content dimensions.\n       *    - Wait for the next frame using _dom.read, so the UI will be updated.\n       * (Frame 2)\n       *    - Read the new content dimensions.\n       *    - Calculate the height difference and the new scroll position.\n       *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n       * (Still frame 2, if I'm correct)\n       *    - Change the scroll position (= visually maintain the scroll position).\n       *    - Change the state to re-enable the InfiniteScroll.\n       *    - This should be after changing the scroll position, or it could\n       *    cause the InfiniteScroll to be triggered again immediately.\n       * (Frame 3)\n       *    Done.\n       */\n      this.isBusy = true;\n      // ******** DOM READ ****************\n      // Save the current content dimensions before the UI updates\n      const prev = scrollEl.scrollHeight - scrollEl.scrollTop;\n      // ******** DOM READ ****************\n      requestAnimationFrame(() => {\n        readTask(() => {\n          // UI has updated, save the new content dimensions\n          const scrollHeight = scrollEl.scrollHeight;\n          // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n          const newScrollTop = scrollHeight - prev;\n          // ******** DOM WRITE ****************\n          requestAnimationFrame(() => {\n            writeTask(() => {\n              scrollEl.scrollTop = newScrollTop;\n              this.isBusy = false;\n            });\n          });\n        });\n      });\n    }\n  }\n  canStart() {\n    return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.scrollEl) {\n      if (shouldListen) {\n        this.scrollEl.addEventListener('scroll', this.onScroll);\n      }\n      else {\n        this.scrollEl.removeEventListener('scroll', this.onScroll);\n      }\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const disabled = this.disabled;\n    return (h(Host, { class: {\n        [mode]: true,\n        'infinite-scroll-loading': this.isLoading,\n        'infinite-scroll-enabled': !disabled,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"threshold\": [\"thresholdChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nInfiniteScroll.style = infiniteScrollCss;\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst InfiniteScrollContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentDidLoad() {\n    if (this.loadingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`infinite-scroll-content-${mode}`]: true,\n      } }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText && h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(this.loadingText) }))));\n  }\n};\nInfiniteScrollContent.style = {\n  ios: infiniteScrollContentIosCss,\n  md: infiniteScrollContentMdCss\n};\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\n"],"names":["printIonWarning","message","params","console","warn","printIonError","error","printRequiredElementError","el","targetSelectors","tagName","toLowerCase","join","a","b","p","r","registerInstance","e","createEvent","c","writeTask","f","readTask","h","i","getElement","H","Host","getIonMode","config","findClosestIonContent","printIonContentErrorMsg","g","getScrollElement","s","sanitizeDOMString","infiniteScrollCss","InfiniteScroll","hostRef","ionInfinite","thrPx","thrPc","didFire","isBusy","isLoading","threshold","disabled","position","onScroll","scrollEl","canStart","infiniteHeight","offsetHeight","scrollTop","scrollHeight","height","distanceFromInfinite","emit","val","lastIndexOf","parseFloat","enableScrollEvents","contentEl","thresholdChanged","disabledChanged","clientHeight","undefined","prev","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","mode","class","style","infiniteScrollContentIosCss","infiniteScrollContentMdCss","InfiniteScrollContent","loadingSpinner","get","name","loadingText","innerHTML","ios","md","ion_infinite_scroll","ion_infinite_scroll_content"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}