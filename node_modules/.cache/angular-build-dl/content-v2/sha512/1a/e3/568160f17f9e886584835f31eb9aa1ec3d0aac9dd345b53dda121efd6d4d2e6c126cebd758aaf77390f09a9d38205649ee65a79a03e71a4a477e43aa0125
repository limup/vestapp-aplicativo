{"version":3,"sources":["./src/app/pages/checkout/checkout-routing.module.ts","./src/app/pages/checkout/checkout.module.ts","./src/app/pages/checkout/checkout.page.ts","./src/app/pages/checkout/checkout.page.scss","./src/app/pages/checkout/checkout.page.html"],"names":[],"mappings":"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","file":"src_app_pages_checkout_checkout_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckoutPage } from './checkout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckoutPageRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutPageRoutingModule } from './checkout-routing.module';\n\nimport { CheckoutPage } from './checkout.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CheckoutPageRoutingModule\n  ],\n  declarations: [CheckoutPage]\n})\nexport class CheckoutPageModule {}","import { Component, OnInit, Self, Input } from '@angular/core';\nimport {CheckboxControlValueAccessor, CheckboxRequiredValidator, NgForm} from '@angular/forms';\nimport {CartService} from '../../services/cart.service';\nimport {map} from 'rxjs/operators';\nimport {Storage} from '@ionic/storage-angular';\nimport {environment} from '../../../environments/environment';\nimport {ProductModel} from \"../../models/product-model\";\nimport {CustomerModel} from \"../../models/customerModel\";\nimport {OrderModel} from \"../../models/orderModel\";\nimport { InputType } from 'zlib';\n\n@Component({\n    selector: 'app-checkout',\n    templateUrl: './checkout.page.html',\n    styleUrls: ['./checkout.page.scss'],\n})\nexport class CheckoutPage implements OnInit {\n\n    constructor(public cartService: CartService,\n                private storage: Storage) {\n    }\n\n    isPersonalUp: boolean;\n    isBillingUp: boolean;\n    isShippingUp: boolean;\n    isPaymentUp: boolean;\n    sameShipping: boolean;\n    paymentGateway: PaymentGateway[] = [];\n    subTotal = 0;\n    cartTotal = 0;\n    products: ProductModel[] = [];\n    userDetails: CustomerModel;\n    BrazilianStates = environment.states;\n    taxesRate: number;\n    finalTax = 0;\n    math = Math;\n\n    async ngOnInit() {\n        this.isPersonalUp = false;\n        this.isBillingUp = false;\n        this.isShippingUp = false;\n        this.isPaymentUp = false;\n        this.sameShipping = true;\n\n        this.cartService.getAllPaymentGateways()\n            .pipe(\n                map((pg: PaymentGateway[]) => pg.filter(p => p.enabled === true))\n            ).subscribe(pg => {\n            this.paymentGateway = pg;\n            console.log(this.paymentGateway);\n        });\n\n        this.cartService.cartData.subscribe(data => this.products = data.productData);\n\n        this.cartService.cartTotal.subscribe(total => this.cartTotal = total);\n\n        this.storage.get('user').then(userData => this.userDetails = userData);\n\n\n        this.cartService.getTaxes()\n            .pipe(\n                map((taxes: any[]) => taxes.map(t => t.rate))\n            )\n            .subscribe(data => {\n                let taxRate: number;\n                // @ts-ignore\n                taxRate = parseInt(data, 10);\n                this.taxesRate = taxRate;\n                this.subTotal = this.cartTotal;\n                let taxCalculation = (this.taxesRate * this.subTotal) / 100;\n                if (taxCalculation < 1) {\n                    taxCalculation = 1;\n                    this.finalTax = taxCalculation;\n                } else {\n                    this.finalTax = Math.floor(Math.abs((this.taxesRate * this.subTotal) / 100));\n                }\n                this.cartTotal = this.subTotal + this.finalTax;\n            }, err => console.error(err));\n\n\n    }\n\n    toggleUp(section: string) {\n\n        switch (section) {\n            case 'billing':\n                this.isBillingUp = !this.isBillingUp;\n                break;\n            case 'shipping':\n                this.isShippingUp = !this.isShippingUp;\n                break;\n            case 'payment':\n                this.isPaymentUp = !this.isPaymentUp;\n                break;\n            default:\n                this.isPersonalUp = !this.isPersonalUp;\n                break;\n        }\n    }\n\n    toggleShipping() {\n        this.sameShipping = !this.sameShipping;\n    }\n\n    async checkout(checkoutForm: NgForm) {\n        const data = checkoutForm.value;\n        const user: CustomerModel = await this.storage.get('user');\n\n\n        const lineItems: LineItemsModel[] = [];\n        this.products.forEach(p => {\n            lineItems.push({\n                product_id: p.id,\n                quantity: parseInt(String(p.in_cart), 10)\n            });\n        });\n        let formData: OrderModel = null;\n\n        if (this.sameShipping) {\n            formData = {\n                set_paid: true,\n                payment_method: this.paymentGateway[0].id,\n                payment_method_title: this.paymentGateway[0].method_title,\n                customer_id: 0,\n                billing: {\n                    address_1: data.b_address_line_1,\n                    address_2: data.b_address_line_2,\n                    city: data.b_city,\n                    state: data.b_state,\n                    country: 'BR',\n                    postcode: data.b_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name,\n                    email: data.email,\n                    phone: data.phone,\n                },\n                shipping: {\n                    address_1: data.b_address_line_1,\n                    address_2: data.b_address_line_2,\n                    city: data.b_city,\n                    state: data.b_state,\n                    country: 'BR',\n                    postcode: data.b_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name\n                },\n                line_items: lineItems\n            };\n        } else {\n            formData = {\n                set_paid: true,\n                payment_method: this.paymentGateway[0].id,\n                payment_method_title: this.paymentGateway[0].method_title,\n                customer_id: 0,\n                billing: {\n                    address_1: data.b_address_line_1,\n                    address_2: data.b_address_line_2,\n                    city: data.b_city,\n                    state: data.b_state,\n                    country: 'BR',\n                    postcode: data.b_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name,\n                    email: data.email,\n                    phone: data.phone,\n                },\n                shipping: {\n                    address_1: data.s_address_line_1,\n                    address_2: data.s_address_line_2,\n                    city: data.s_city,\n                    state: data.s_state,\n                    country: 'BR',\n                    postcode: data.s_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name\n                },\n                line_items: lineItems\n            };\n        }\n\n\n        // @ts-ignore\n        this.cartService.createOrder(formData).then();\n    }\n}\n\n\ninterface PaymentGateway {\n    description: string;\n    enabled: boolean;\n    title: string;\n    id: string;\n    method_description: string;\n    method_title: string;\n    \n    \n}\n\n// tslint:disable-next-line:class-name\nexport interface LineItemsModel {\n    product_id: number;\n    quantity: number;\n    variation_id?: number;\n} ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGVja291dC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"/tabs/tab3\\\">\\n        <ion-icon name=\\\"arrow-back-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-left\\\">Finalizar Compra</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form #checkoutForm=\\\"ngForm\\\">\\n    <ion-grid>\\n      <!-- Personal Details-->\\n      <ion-row>\\n        <ion-col>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n              <ion-label (click)=\\\"toggleUp('personal')\\\"\\n                         class=\\\"d-flex justify-content-between align-items-center\\\"\\n                         data-target=\\\"#personalDetails\\\" data-toggle=\\\"collapse\\\">\\n                <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #e5e5e5;\\\">Detalhes do Cliente</h2>\\n                <ion-icon (click)=\\\"toggleUp('personal')\\\" *ngIf=\\\"!isPersonalUp\\\"\\n                          class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#personalDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-down-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #e5e5e5;\\\"></ion-icon>\\n                <ion-icon (click)=\\\"toggleUp('personal')\\\" *ngIf=\\\"isPersonalUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#personalDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-up-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #e5e5e5;\\\"></ion-icon>\\n              </ion-label>\\n            </ion-list-header>\\n            <div class=\\\"collapse\\\" id=\\\"personalDetails\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Nome</ion-label>\\n                <ion-input #fname=\\\"ngModel\\\" name=\\\"first_name\\\" ngModel required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Sobrenome</ion-label>\\n                <ion-input #lname=\\\"ngModel\\\" name=\\\"last_name\\\" ngModel required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">E-mail</ion-label>\\n                <ion-input #email=\\\"ngModel\\\" name=\\\"email\\\" ngModel required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Telefone</ion-label>\\n                <ion-input #phone=\\\"ngModel\\\" name=\\\"phone\\\" ngModel required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Billing Details-->\\n      <ion-row>\\n        <ion-col>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n              <ion-label (click)=\\\"toggleUp('billing')\\\"\\n                         class=\\\"d-flex justify-content-between align-items-center\\\"\\n                         data-target=\\\"#billingDetails\\\" data-toggle=\\\"collapse\\\">\\n                <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #fff;\\\">Endereço de Cobrança</h2>\\n                <ion-icon (click)=\\\"toggleUp('billing')\\\" *ngIf=\\\"!isBillingUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#billingDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-down-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #fff;\\\"></ion-icon>\\n                <ion-icon (click)=\\\"toggleUp('billing')\\\" *ngIf=\\\"isBillingUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#billingDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-up-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #fff;\\\"></ion-icon>\\n              </ion-label>\\n            </ion-list-header>\\n\\n\\n            <ion-item class=\\\"collapse\\\" id=\\\"billingDetails\\\">\\n              <ion-label position=\\\"stacked\\\">Endereço</ion-label>\\n              <ion-input #b_address_line_1=\\\"ngModel\\\" name=\\\"b_address_line_1\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Complemento</ion-label>\\n              <ion-input #b_address_line_2=\\\"ngModel\\\" name=\\\"b_address_line_2\\\" ngModel\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Cidade</ion-label>\\n              <ion-input #b_city=\\\"ngModel\\\" name=\\\"b_city\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Estado</ion-label>\\n              <ion-select #b_state=\\\"ngModel\\\" name=\\\"b_state\\\" ngModel placeholder=\\\"Selecione o estado\\\"  required>\\n                <ion-select-option *ngFor=\\\"let s of BrazilianStates; index as i\\\"\\n                                   [value]=\\\"s.value\\\">{{ s.name }}</ion-select-option>\\n              </ion-select>\\n              <ion-label position=\\\"stacked\\\">CEP</ion-label>\\n              <ion-input #b_postcode=\\\"ngModel\\\" name=\\\"b_postcode\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Checkbox-->\\n      <ion-row>\\n        <ion-col>\\n          <ion-item style=\\\"border: 1px solid lightgray;\\\">\\n            <ion-checkbox (ionChange)=\\\"toggleShipping()\\\" [checked]=\\\"sameShipping\\\" color=\\\"dark\\\"\\n                          slot=\\\"start\\\"></ion-checkbox>\\n            <ion-label>Entregar no endereço de cobrança</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Shipping Details-->\\n      <ion-row *ngIf=\\\"!sameShipping\\\">\\n        <ion-col>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n              <ion-label (click)=\\\"toggleUp('shipping')\\\"\\n                         class=\\\"d-flex justify-content-between align-items-center\\\"\\n                         data-target=\\\"#shippingDetails\\\" data-toggle=\\\"collapse\\\">\\n                <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #350303;\\\">Endereço de Entrega</h2>\\n                <ion-icon (click)=\\\"toggleUp('shipping')\\\" *ngIf=\\\"!isShippingUp\\\"\\n                          class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#shippingDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-down-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #3f1ce0;\\\"></ion-icon>\\n                <ion-icon (click)=\\\"toggleUp('shipping')\\\" *ngIf=\\\"isShippingUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#shippingDetails\\\"\\n                          data-toggle=\\\"collapse\\\" name=\\\"chevron-up-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #3f1ce0;\\\"></ion-icon>\\n              </ion-label>\\n            </ion-list-header>\\n\\n\\n            <ion-item class=\\\"collapse\\\" id=\\\"shippingDetails\\\">\\n              <ion-label position=\\\"stacked\\\">Endereço</ion-label>\\n              <ion-input #s_address_line_1=\\\"ngModel\\\" name=\\\"s_address_line_1\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Complemento</ion-label>\\n              <ion-input #s_address_line_2=\\\"ngModel\\\" name=\\\"s_address_line_2\\\" ngModel\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Cidade</ion-label>\\n              <ion-input #s_city=\\\"ngModel\\\" name=\\\"s_city\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n\\n              <ion-select #s_state=\\\"ngModel\\\" name=\\\"s_state\\\" ngModel placeholder=\\\"Selecione o estado\\\" required>\\n                <ion-select-option *ngFor=\\\"let s of BrazilianStates; index as i\\\"\\n                                   [value]=\\\"s.value\\\">{{ s.name }}</ion-select-option>\\n              </ion-select>\\n              <ion-label position=\\\"stacked\\\">CEP</ion-label>\\n              <ion-input #s_postcode=\\\"ngModel\\\" name=\\\"s_postcode\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n    </ion-grid>\\n  </form>\\n\\n  <ion-grid>\\n    <!-- Payment Details-->\\n    <ion-row>\\n      <ion-col>\\n        <ion-list *ngIf=\\\"paymentGateway.length > 0\\\" lines=\\\"full\\\">\\n          <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n            <ion-label (click)=\\\"toggleUp('payment')\\\"\\n                       class=\\\"d-flex justify-content-between align-items-center\\\"\\n                       data-target=\\\"#paymentDetails\\\" data-toggle=\\\"collapse\\\">\\n              <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #f0f1dd;\\\">Opções de Pagamento </h2>\\n              <ion-icon (click)=\\\"toggleUp('payment')\\\" *ngIf=\\\"!isShippingUp\\\" class=\\\"justify-self-start\\\"\\n                        data-target=\\\"#shippingDetails\\\" data-toggle=\\\"collapse\\\"\\n                        name=\\\"chevron-down-outline\\\"\\n                        size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #f0f1dd;\\\"></ion-icon>\\n              <ion-icon (click)=\\\"toggleUp('payment')\\\" *ngIf=\\\"isShippingUp\\\" class=\\\"justify-self-start\\\"\\n                        data-target=\\\"#shippingDetails\\\"\\n                        data-toggle=\\\"collapse\\\" name=\\\"chevron-up-outline\\\"\\n                        size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #f0f1dd;\\\"></ion-icon>\\n            </ion-label>\\n          </ion-list-header>\\n        </ion-list>\\n        <ion-item class=\\\"collapse\\\" id=\\\"paymentDetails\\\">\\n          <ion-checkbox checked\\n                        color=\\\"dark\\\"\\n                        readonly\\n                        slot=\\\"start\\\"></ion-checkbox>              \\n          <ion-label>\\n              {{ paymentGateway[0]?.title | uppercase}}\\n              <p>{{ paymentGateway[0]?.description}}</p> \\n              \\n          </ion-label>     \\n        </ion-item>\\n      </ion-col>\\n      <ion-col *ngIf=\\\"paymentGateway\\\" class=\\\"d-flex justify-content-center\\\">\\n       <!-- <ion-spinner color=\\\"dark\\\" name=\\\"dots\\\" size=\\\"large\\\"></ion-spinner>-->\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <!-- ORDER SUMMARY -->\\n    <ion-row>\\n      <ion-col>\\n        <ion-card class=\\\"ion-no-padding ion-no-margin\\\">\\n          <ion-card-header color=\\\"medium\\\">\\n            <ion-card-title>Resumo do Pedido</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\" routerLink=\\\"/tabs/tab3\\\">\\n                  SubTotal ({{(cartService.cartData | async).count }})\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-spinner name=\\\"bubbles\\\" *ngIf=\\\"!subTotal\\\"></ion-spinner>\\n                  <ion-text *ngIf=\\\"subTotal\\\">{{ subTotal | currency: 'R$' }}</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\">\\n                  Entrega\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-text>Frete Grátis</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\">\\n                  Taxas\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-spinner name=\\\"bubbles\\\" *ngIf=\\\"!finalTax\\\"></ion-spinner>\\n                  <ion-text *ngIf=\\\"finalTax\\\">{{ finalTax|currency:'R$'}}</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\">\\n                  Total\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-text>{{ cartTotal | currency: 'R$'}}</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n\\n  <!--SUBMIT BUTTON-->\\n  <ion-row>\\n    <ion-col>\\n      <ion-button (click)=\\\"checkout(checkoutForm)\\\"\\n                  [disabled]=\\\"checkoutForm.invalid || checkoutForm.pending\\\"\\n                  color=\\\"dark\\\"\\n                  expand=\\\"full\\\"\\n                  fill=\\\"solid\\\"\\n                  size=\\\"large\\\"\\n                  type=\\\"submit\\\"\\n      >Finalizar Compra\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}