"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js"],{

/***/ 7950:
/*!************************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-datetime-button.entry.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_datetime_button": function() { return /* binding */ DatetimeButton; }
/* harmony export */ });
/* harmony import */ var _home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty.js */ 7797);
/* harmony import */ var _home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js */ 1803);
/* harmony import */ var _home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js */ 8069);
/* harmony import */ var _home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass.js */ 8047);
/* harmony import */ var _index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-1a99aeb7.js */ 4895);
/* harmony import */ var _ionic_global_04e268e7_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ionic-global-04e268e7.js */ 2107);
/* harmony import */ var _helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers-4d272360.js */ 9158);
/* harmony import */ var _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index-c4b11676.js */ 9273);
/* harmony import */ var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./theme-7670341c.js */ 320);
/* harmony import */ var _parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parse-9a48ce79.js */ 4704);






/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */






var iosDatetimeButtonCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}";
var mdDatetimeButtonCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}";

var DatetimeButton = /*#__PURE__*/function () {
  function DatetimeButton(hostRef) {
    var _this = this;

    (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_3__["default"])(this, DatetimeButton);

    (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    this.datetimeEl = null;
    this.overlayEl = null;
    this.datetimePresentation = 'date-time';
    this.datetimeActive = false;
    /**
     * The color to use from your application's color palette.
     * Default options are: `"primary"`, `"secondary"`, `"tertiary"`, `"success"`, `"warning"`, `"danger"`, `"light"`, `"medium"`, and `"dark"`.
     * For more information on colors, see [theming](/docs/theming/basics).
     */

    this.color = 'primary';
    /**
     * If `true`, the user cannot interact with the button.
     */

    this.disabled = false;
    /**
     * Check the value property on the linked
     * ion-datetime and then format it according
     * to the locale specified on ion-datetime.
     */

    this.setDateTimeText = function () {
      var datetimeEl = _this.datetimeEl,
          datetimePresentation = _this.datetimePresentation;

      if (!datetimeEl) {
        return;
      }

      var value = datetimeEl.value,
          locale = datetimeEl.locale,
          hourCycle = datetimeEl.hourCycle,
          preferWheel = datetimeEl.preferWheel,
          multiple = datetimeEl.multiple;

      if (multiple) {
        (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_8__.p)("Multi-date selection cannot be used with ion-datetime-button.\n\nPlease upvote https://github.com/ionic-team/ionic-framework/issues/25668 if you are interested in seeing this functionality added.\n      ", _this.el);
        return;
      }
      /**
       * Both ion-datetime and ion-datetime-button default
       * to today's date and time if no value is set.
       */


      var parsedDatetime = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.p)(value || (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.f)());
      var use24Hour = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.G)(locale, hourCycle); // TODO(FW-1865) - Remove once FW-1831 is fixed.

      parsedDatetime.tzOffset = undefined;
      _this.dateText = _this.timeText = undefined;

      switch (datetimePresentation) {
        case 'date-time':
        case 'time-date':
          var dateText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.Q)(locale, parsedDatetime);
          var timeText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.H)(locale, parsedDatetime, use24Hour);

          if (preferWheel) {
            _this.dateText = "".concat(dateText, " ").concat(timeText);
          } else {
            _this.dateText = dateText;
            _this.timeText = timeText;
          }

          break;

        case 'date':
          _this.dateText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.Q)(locale, parsedDatetime);
          break;

        case 'time':
          _this.timeText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.H)(locale, parsedDatetime, use24Hour);
          break;

        case 'month-year':
          _this.dateText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.D)(locale, parsedDatetime);
          break;

        case 'month':
          _this.dateText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.P)(locale, parsedDatetime, {
            month: 'long'
          });
          break;

        case 'year':
          _this.dateText = (0,_parse_9a48ce79_js__WEBPACK_IMPORTED_MODULE_10__.P)(locale, parsedDatetime, {
            year: 'numeric'
          });
          break;
      }
    };
    /**
     * Waits for the ion-datetime to re-render.
     * This is needed in order to correctly position
     * a popover relative to the trigger element.
     */


    this.waitForDatetimeChanges = /*#__PURE__*/(0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/(0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().mark(function _callee() {
      var datetimeEl;
      return (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              datetimeEl = _this.datetimeEl;

              if (datetimeEl) {
                _context.next = 3;
                break;
              }

              return _context.abrupt("return", Promise.resolve());

            case 3:
              return _context.abrupt("return", new Promise(function (resolve) {
                (0,_helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_7__.a)(datetimeEl, 'ionRender', resolve, {
                  once: true
                });
              }));

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    this.handleDateClick = /*#__PURE__*/function () {
      var _ref2 = (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/(0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().mark(function _callee2(ev) {
        var datetimeEl, datetimePresentation, needsPresentationChange, needsChange;
        return (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                datetimeEl = _this.datetimeEl, datetimePresentation = _this.datetimePresentation;

                if (datetimeEl) {
                  _context2.next = 3;
                  break;
                }

                return _context2.abrupt("return");

              case 3:
                needsPresentationChange = false;
                /**
                 * When clicking the date button,
                 * we need to make sure that only a date
                 * picker is displayed. For presentation styles
                 * that display content other than a date picker,
                 * we need to update the presentation style.
                 */

                _context2.t0 = datetimePresentation;
                _context2.next = _context2.t0 === 'date-time' ? 7 : _context2.t0 === 'time-date' ? 7 : 10;
                break;

              case 7:
                needsChange = datetimeEl.presentation !== 'date';
                /**
                 * The date+time wheel picker
                 * shows date and time together,
                 * so do not adjust the presentation
                 * in that case.
                 */

                if (!datetimeEl.preferWheel && needsChange) {
                  datetimeEl.presentation = 'date';
                  needsPresentationChange = true;
                }

                return _context2.abrupt("break", 10);

              case 10:
                /**
                 * Track which button was clicked
                 * so that it can have the correct
                 * activated styles applied when
                 * the modal/popover containing
                 * the datetime is opened.
                 */
                _this.selectedButton = 'date';

                _this.presentOverlay(ev, needsPresentationChange, _this.dateTargetEl);

              case 12:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();

    this.handleTimeClick = function (ev) {
      var datetimeEl = _this.datetimeEl,
          datetimePresentation = _this.datetimePresentation;

      if (!datetimeEl) {
        return;
      }

      var needsPresentationChange = false;
      /**
       * When clicking the time button,
       * we need to make sure that only a time
       * picker is displayed. For presentation styles
       * that display content other than a time picker,
       * we need to update the presentation style.
       */

      switch (datetimePresentation) {
        case 'date-time':
        case 'time-date':
          var needsChange = datetimeEl.presentation !== 'time';

          if (needsChange) {
            datetimeEl.presentation = 'time';
            needsPresentationChange = true;
          }

          break;
      }
      /**
       * Track which button was clicked
       * so that it can have the correct
       * activated styles applied when
       * the modal/popover containing
       * the datetime is opened.
       */


      _this.selectedButton = 'time';

      _this.presentOverlay(ev, needsPresentationChange, _this.timeTargetEl);
    };
    /**
     * If the datetime is presented in an
     * overlay, the datetime and overlay
     * should be appropriately sized.
     * These classes provide default sizing values
     * that developers can customize.
     * The goal is to provide an overlay that is
     * reasonably sized with a datetime that
     * fills the entire container.
     */


    this.presentOverlay = /*#__PURE__*/function () {
      var _ref3 = (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/(0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().mark(function _callee3(ev, needsPresentationChange, triggerEl) {
        var overlayEl;
        return (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                overlayEl = _this.overlayEl;

                if (overlayEl) {
                  _context3.next = 3;
                  break;
                }

                return _context3.abrupt("return");

              case 3:
                if (!(overlayEl.tagName === 'ION-POPOVER')) {
                  _context3.next = 10;
                  break;
                }

                if (!needsPresentationChange) {
                  _context3.next = 7;
                  break;
                }

                _context3.next = 7;
                return _this.waitForDatetimeChanges();

              case 7:
                /**
                 * We pass the trigger button element
                 * so that the popover aligns with the individual
                 * button that was clicked, not the component container.
                 */
                overlayEl.present(Object.assign(Object.assign({}, ev), {
                  detail: {
                    ionShadowTarget: triggerEl
                  }
                }));
                _context3.next = 11;
                break;

              case 10:
                overlayEl.present();

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      return function (_x2, _x3, _x4) {
        return _ref3.apply(this, arguments);
      };
    }();
  }

  (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_createClass_js__WEBPACK_IMPORTED_MODULE_4__["default"])(DatetimeButton, [{
    key: "componentWillLoad",
    value: function () {
      var _componentWillLoad = (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/(0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().mark(function _callee4() {
        var _this2 = this;

        var datetime, datetimeEl, io, overlayEl;
        return (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_regeneratorRuntime_js__WEBPACK_IMPORTED_MODULE_1__["default"])().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                datetime = this.datetime;

                if (datetime) {
                  _context4.next = 4;
                  break;
                }

                (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_8__.b)('An ID associated with an ion-datetime instance is required for ion-datetime-button to function properly.', this.el);
                return _context4.abrupt("return");

              case 4:
                datetimeEl = this.datetimeEl = document.getElementById(datetime);

                if (datetimeEl) {
                  _context4.next = 8;
                  break;
                }

                (0,_index_c4b11676_js__WEBPACK_IMPORTED_MODULE_8__.b)("No ion-datetime instance found for ID '".concat(datetime, "'."), this.el);
                return _context4.abrupt("return");

              case 8:
                /**
                 * Since the datetime can be used in any context (overlays, accordion, etc)
                 * we track when it is visible to determine when it is active.
                 * This informs which button is highlighted as well as the
                 * aria-expanded state.
                 */
                io = new IntersectionObserver(function (entries) {
                  var ev = entries[0];
                  _this2.datetimeActive = ev.isIntersecting;
                }, {
                  threshold: 0.01
                });
                io.observe(datetimeEl);
                /**
                 * Get a reference to any modal/popover
                 * the datetime is being used in so we can
                 * correctly size it when it is presented.
                 */

                overlayEl = this.overlayEl = datetimeEl.closest('ion-modal, ion-popover');
                /**
                 * The .ion-datetime-button-overlay class contains
                 * styles that allow any modal/popover to be
                 * sized according to the dimensions of the datetime.
                 * If developers want a smaller/larger overlay all they need
                 * to do is change the width/height of the datetime.
                 * Additionally, this lets us avoid having to set
                 * explicit widths on each variant of datetime.
                 */

                if (overlayEl) {
                  overlayEl.classList.add('ion-datetime-button-overlay');
                }

                (0,_helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_7__.c)(datetimeEl, function () {
                  var datetimePresentation = _this2.datetimePresentation = datetimeEl.presentation || 'date-time';
                  /**
                   * Set the initial display
                   * in the rendered buttons.
                   *
                   * From there, we need to listen
                   * for ionChange to be emitted
                   * from datetime so we know when
                   * to re-render the displayed
                   * text in the buttons.
                   */

                  _this2.setDateTimeText();

                  (0,_helpers_4d272360_js__WEBPACK_IMPORTED_MODULE_7__.a)(datetimeEl, 'ionChange', _this2.setDateTimeText);
                  /**
                   * Configure the initial selected button
                   * in the event that the datetime is displayed
                   * without clicking one of the datetime buttons.
                   * For example, a datetime could be expanded
                   * in an accordion. In this case users only
                   * need to click the accordion header to show
                   * the datetime.
                   */

                  switch (datetimePresentation) {
                    case 'date-time':
                    case 'date':
                    case 'month-year':
                    case 'month':
                    case 'year':
                      _this2.selectedButton = 'date';
                      break;

                    case 'time-date':
                    case 'time':
                      _this2.selectedButton = 'time';
                      break;
                  }
                });

              case 13:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function componentWillLoad() {
        return _componentWillLoad.apply(this, arguments);
      }

      return componentWillLoad;
    }()
  }, {
    key: "render",
    value: function render() {
      var _createColorClasses,
          _this3 = this;

      var color = this.color,
          dateText = this.dateText,
          timeText = this.timeText,
          selectedButton = this.selectedButton,
          datetimeActive = this.datetimeActive,
          disabled = this.disabled;
      var mode = (0,_ionic_global_04e268e7_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);
      return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.H, {
        class: (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_9__.c)(color, (_createColorClasses = {}, (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, mode, true), (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, "".concat(selectedButton, "-active"), datetimeActive), (0,_home_user_vestapp_arnaldo_Projetos_vestapp_aplicativo_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'datetime-button-disabled', disabled), _createColorClasses))
      }, dateText && (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
        class: "ion-activatable",
        id: "date-button",
        "aria-expanded": datetimeActive ? 'true' : 'false',
        onClick: this.handleDateClick,
        disabled: disabled,
        part: "native",
        ref: function ref(el) {
          return _this3.dateTargetEl = el;
        }
      }, (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)("slot", {
        name: "date-target"
      }, dateText), mode === 'md' && (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-ripple-effect", null)), timeText && (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
        class: "ion-activatable",
        id: "time-button",
        "aria-expanded": datetimeActive ? 'true' : 'false',
        onClick: this.handleTimeClick,
        disabled: disabled,
        part: "native",
        ref: function ref(el) {
          return _this3.timeTargetEl = el;
        }
      }, (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)("slot", {
        name: "time-target"
      }, timeText), mode === 'md' && (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-ripple-effect", null)));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_1a99aeb7_js__WEBPACK_IMPORTED_MODULE_5__.i)(this);
    }
  }]);

  return DatetimeButton;
}();

DatetimeButton.style = {
  ios: iosDatetimeButtonCss,
  md: mdDatetimeButtonCss
};


/***/ })

}]);
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js.js.map