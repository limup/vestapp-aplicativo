{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/user-vestapp-arnaldo/Projetos/vestapp-aplicativo/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/home/user-vestapp-arnaldo/Projetos/vestapp-aplicativo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/home/user-vestapp-arnaldo/Projetos/vestapp-aplicativo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/user-vestapp-arnaldo/Projetos/vestapp-aplicativo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-1a99aeb7.js';\nimport { m as chevronForwardOutline, n as ellipsisHorizontal } from './index-40bb69ee.js';\nimport { b as getIonMode } from './ionic-global-04e268e7.js';\nimport { i as inheritAriaAttributes } from './helpers-4d272360.js';\nimport { o as openURL, c as createColorClasses, h as hostContext } from './theme-7670341c.js';\nvar breadcrumbIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-850, #2d4665);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, rgba(233, 237, 243, 0.7))}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;padding-left:12px;padding-right:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, #445b78)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-400, #92a0b3);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #242d39)}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, #e9edf3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #d9e0ea)}\";\nvar breadcrumbMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-600, #677483);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, #35404e);--background-focused:$breadcrumb-md-background-focused}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}.breadcrumb-separator{margin-left:10px;margin-right:10px;margin-top:-1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-separator{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-550, #7d8894);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #222d3a)}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, #eef1f3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #dfe5e8)}\";\n\nvar Breadcrumb = /*#__PURE__*/function () {\n  function Breadcrumb(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Breadcrumb);\n\n    registerInstance(this, hostRef);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.collapsedClick = createEvent(this, \"collapsedClick\", 7);\n    this.inheritedAttributes = {};\n    /** @internal */\n\n    this.collapsed = false;\n    /**\n     * If `true`, the breadcrumb will take on a different look to show that\n     * it is the currently active breadcrumb. Defaults to `true` for the\n     * last breadcrumb if it is not set on any.\n     */\n\n    this.active = false;\n    /**\n     * If `true`, the user cannot interact with the breadcrumb.\n     */\n\n    this.disabled = false;\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n\n    this.collapsedIndicatorClick = function () {\n      _this.collapsedClick.emit({\n        ionShadowTarget: _this.collapsedRef\n      });\n    };\n  }\n\n  _createClass(Breadcrumb, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n  }, {\n    key: \"isClickable\",\n    value: function isClickable() {\n      return this.href !== undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses,\n          _this2 = this;\n\n      var color = this.color,\n          active = this.active,\n          collapsed = this.collapsed,\n          disabled = this.disabled,\n          download = this.download,\n          el = this.el,\n          inheritedAttributes = this.inheritedAttributes,\n          last = this.last,\n          routerAnimation = this.routerAnimation,\n          routerDirection = this.routerDirection,\n          separator = this.separator,\n          showCollapsedIndicator = this.showCollapsedIndicator,\n          target = this.target;\n      var clickable = this.isClickable();\n      var TagType = this.href === undefined ? 'span' : 'a'; // Links can still be tabbed to when set to disabled if they have an href\n      // in order to truly disable them we can keep it as an anchor but remove the href\n\n      var href = disabled ? undefined : this.href;\n      var mode = getIonMode(this);\n      var attrs = TagType === 'span' ? {} : {\n        download: download,\n        href: href,\n        target: target\n      }; // If the breadcrumb is collapsed, check if it contains the collapsed indicator\n      // to show the separator as long as it isn't also the last breadcrumb\n      // otherwise if not collapsed use the value in separator\n\n      var showSeparator = last ? false : collapsed ? showCollapsedIndicator && !last ? true : false : separator;\n      return h(Host, {\n        onClick: function onClick(ev) {\n          return openURL(href, ev, routerDirection, routerAnimation);\n        },\n        \"aria-disabled\": disabled ? 'true' : null,\n        class: createColorClasses(color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'breadcrumb-active', active), _defineProperty(_createColorClasses, 'breadcrumb-collapsed', collapsed), _defineProperty(_createColorClasses, 'breadcrumb-disabled', disabled), _defineProperty(_createColorClasses, 'in-breadcrumbs-color', hostContext('ion-breadcrumbs[color]', el)), _defineProperty(_createColorClasses, 'in-toolbar', hostContext('ion-toolbar', this.el)), _defineProperty(_createColorClasses, 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), _defineProperty(_createColorClasses, 'ion-activatable', clickable), _defineProperty(_createColorClasses, 'ion-focusable', clickable), _createColorClasses))\n      }, h(TagType, Object.assign({}, attrs, {\n        class: \"breadcrumb-native\",\n        part: \"native\",\n        disabled: disabled,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }, inheritedAttributes), h(\"slot\", {\n        name: \"start\"\n      }), h(\"slot\", null), h(\"slot\", {\n        name: \"end\"\n      })), showCollapsedIndicator && h(\"button\", {\n        part: \"collapsed-indicator\",\n        onClick: function onClick() {\n          return _this2.collapsedIndicatorClick();\n        },\n        ref: function ref(collapsedEl) {\n          return _this2.collapsedRef = collapsedEl;\n        },\n        class: {\n          'breadcrumbs-collapsed-indicator': true\n        }\n      }, h(\"ion-icon\", {\n        icon: ellipsisHorizontal,\n        lazy: false\n      })), showSeparator &&\n      /**\n       * Separators should not be announced by narrators.\n       * We add aria-hidden on the span so that this applies\n       * to any custom separators too.\n       */\n      h(\"span\", {\n        class: \"breadcrumb-separator\",\n        part: \"separator\",\n        \"aria-hidden\": \"true\"\n      }, h(\"slot\", {\n        name: \"separator\"\n      }, mode === 'ios' ? h(\"ion-icon\", {\n        icon: chevronForwardOutline,\n        lazy: false,\n        \"flip-rtl\": true\n      }) : h(\"span\", null, \"/\"))));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Breadcrumb;\n}();\n\nBreadcrumb.style = {\n  ios: breadcrumbIosCss,\n  md: breadcrumbMdCss\n};\nvar breadcrumbsIosCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:20px;padding-right:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}\";\nvar breadcrumbsMdCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nvar Breadcrumbs = /*#__PURE__*/function () {\n  function Breadcrumbs(hostRef) {\n    var _this3 = this;\n\n    _classCallCheck(this, Breadcrumbs);\n\n    registerInstance(this, hostRef);\n    this.ionCollapsedClick = createEvent(this, \"ionCollapsedClick\", 7);\n    /**\n     * The number of breadcrumbs to show before the collapsed indicator.\n     * If `itemsBeforeCollapse` + `itemsAfterCollapse` is greater than `maxItems`,\n     * the breadcrumbs will not be collapsed.\n     */\n\n    this.itemsBeforeCollapse = 1;\n    /**\n     * The number of breadcrumbs to show after the collapsed indicator.\n     * If `itemsBeforeCollapse` + `itemsAfterCollapse` is greater than `maxItems`,\n     * the breadcrumbs will not be collapsed.\n     */\n\n    this.itemsAfterCollapse = 1;\n\n    this.breadcrumbsInit = function () {\n      _this3.setBreadcrumbSeparator();\n\n      _this3.setMaxItems();\n    };\n\n    this.resetActiveBreadcrumb = function () {\n      var breadcrumbs = _this3.getBreadcrumbs(); // Only reset the active breadcrumb if we were the ones to change it\n      // otherwise use the one set on the component\n\n\n      var activeBreadcrumb = breadcrumbs.find(function (breadcrumb) {\n        return breadcrumb.active;\n      });\n\n      if (activeBreadcrumb && _this3.activeChanged) {\n        activeBreadcrumb.active = false;\n      }\n    };\n\n    this.setMaxItems = function () {\n      var itemsAfterCollapse = _this3.itemsAfterCollapse,\n          itemsBeforeCollapse = _this3.itemsBeforeCollapse,\n          maxItems = _this3.maxItems;\n\n      var breadcrumbs = _this3.getBreadcrumbs();\n\n      var _iterator = _createForOfIteratorHelper(breadcrumbs),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var breadcrumb = _step.value;\n          breadcrumb.showCollapsedIndicator = false;\n          breadcrumb.collapsed = false;\n        } // If the number of breadcrumbs exceeds the maximum number of items\n        // that should show and the items before / after collapse do not\n        // exceed the maximum items then we need to collapse the breadcrumbs\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;\n\n      if (shouldCollapse) {\n        // Show the collapsed indicator in the first breadcrumb that collapses\n        breadcrumbs.forEach(function (breadcrumb, index) {\n          if (index === itemsBeforeCollapse) {\n            breadcrumb.showCollapsedIndicator = true;\n          } // Collapse all breadcrumbs that have an index greater than or equal to\n          // the number before collapse and an index less than the total number\n          // of breadcrumbs minus the items that should show after the collapse\n\n\n          if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {\n            breadcrumb.collapsed = true;\n          }\n        });\n      }\n    };\n\n    this.setBreadcrumbSeparator = function () {\n      var itemsAfterCollapse = _this3.itemsAfterCollapse,\n          itemsBeforeCollapse = _this3.itemsBeforeCollapse,\n          maxItems = _this3.maxItems;\n\n      var breadcrumbs = _this3.getBreadcrumbs(); // Check if an active breadcrumb exists already\n\n\n      var active = breadcrumbs.find(function (breadcrumb) {\n        return breadcrumb.active;\n      }); // Set the separator on all but the last breadcrumb\n\n      var _iterator2 = _createForOfIteratorHelper(breadcrumbs),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var breadcrumb = _step2.value;\n          // The only time the last breadcrumb changes is when\n          // itemsAfterCollapse is set to 0, in this case the\n          // last breadcrumb will be the collapsed indicator\n          var last = maxItems !== undefined && itemsAfterCollapse === 0 ? breadcrumb === breadcrumbs[itemsBeforeCollapse] : breadcrumb === breadcrumbs[breadcrumbs.length - 1];\n          breadcrumb.last = last; // If the breadcrumb has defined whether or not to show the\n          // separator then use that value, otherwise check if it's the\n          // last breadcrumb\n\n          var separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;\n          breadcrumb.separator = separator; // If there is not an active breadcrumb already\n          // set the last one to active\n\n          if (!active && last) {\n            breadcrumb.active = true;\n            _this3.activeChanged = true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n\n    this.getBreadcrumbs = function () {\n      return Array.from(_this3.el.querySelectorAll('ion-breadcrumb'));\n    };\n  }\n\n  _createClass(Breadcrumbs, [{\n    key: \"onCollapsedClick\",\n    value: function onCollapsedClick(ev) {\n      var breadcrumbs = this.getBreadcrumbs();\n      var collapsedBreadcrumbs = breadcrumbs.filter(function (breadcrumb) {\n        return breadcrumb.collapsed;\n      });\n      this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), {\n        collapsedBreadcrumbs: collapsedBreadcrumbs\n      }));\n    }\n  }, {\n    key: \"maxItemsChanged\",\n    value: function maxItemsChanged() {\n      this.resetActiveBreadcrumb();\n      this.breadcrumbsInit();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.breadcrumbsInit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses2;\n\n      var color = this.color,\n          collapsed = this.collapsed;\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: createColorClasses(color, (_createColorClasses2 = {}, _defineProperty(_createColorClasses2, mode, true), _defineProperty(_createColorClasses2, 'in-toolbar', hostContext('ion-toolbar', this.el)), _defineProperty(_createColorClasses2, 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), _defineProperty(_createColorClasses2, 'breadcrumbs-collapsed', collapsed), _createColorClasses2))\n      }, h(\"slot\", null));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"maxItems\": [\"maxItemsChanged\"],\n        \"itemsBeforeCollapse\": [\"maxItemsChanged\"],\n        \"itemsAfterCollapse\": [\"maxItemsChanged\"]\n      };\n    }\n  }]);\n\n  return Breadcrumbs;\n}();\n\nBreadcrumbs.style = {\n  ios: breadcrumbsIosCss,\n  md: breadcrumbsMdCss\n};\nexport { Breadcrumb as ion_breadcrumb, Breadcrumbs as ion_breadcrumbs };","map":{"version":3,"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","m","chevronForwardOutline","n","ellipsisHorizontal","b","getIonMode","inheritAriaAttributes","o","openURL","c","createColorClasses","hostContext","breadcrumbIosCss","breadcrumbMdCss","Breadcrumb","hostRef","ionFocus","ionBlur","collapsedClick","inheritedAttributes","collapsed","active","disabled","routerDirection","onFocus","emit","onBlur","collapsedIndicatorClick","ionShadowTarget","collapsedRef","el","href","undefined","color","download","last","routerAnimation","separator","showCollapsedIndicator","target","clickable","isClickable","TagType","mode","attrs","showSeparator","onClick","ev","class","Object","assign","part","name","ref","collapsedEl","icon","lazy","style","ios","md","breadcrumbsIosCss","breadcrumbsMdCss","Breadcrumbs","ionCollapsedClick","itemsBeforeCollapse","itemsAfterCollapse","breadcrumbsInit","setBreadcrumbSeparator","setMaxItems","resetActiveBreadcrumb","breadcrumbs","getBreadcrumbs","activeBreadcrumb","find","breadcrumb","activeChanged","maxItems","shouldCollapse","length","forEach","index","Array","from","querySelectorAll","collapsedBreadcrumbs","filter","detail","ion_breadcrumb","ion_breadcrumbs"],"sources":["/home/user-vestapp-arnaldo/Projetos/vestapp-aplicativo/node_modules/@ionic/core/dist/esm/ion-breadcrumb_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-1a99aeb7.js';\nimport { m as chevronForwardOutline, n as ellipsisHorizontal } from './index-40bb69ee.js';\nimport { b as getIonMode } from './ionic-global-04e268e7.js';\nimport { i as inheritAriaAttributes } from './helpers-4d272360.js';\nimport { o as openURL, c as createColorClasses, h as hostContext } from './theme-7670341c.js';\n\nconst breadcrumbIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-850, #2d4665);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, rgba(233, 237, 243, 0.7))}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;padding-left:12px;padding-right:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, #445b78)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-400, #92a0b3);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #242d39)}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, #e9edf3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #d9e0ea)}\";\n\nconst breadcrumbMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-600, #677483);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, #35404e);--background-focused:$breadcrumb-md-background-focused}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}.breadcrumb-separator{margin-left:10px;margin-right:10px;margin-top:-1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-separator{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-550, #7d8894);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #222d3a)}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, #eef1f3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #dfe5e8)}\";\n\nconst Breadcrumb = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.collapsedClick = createEvent(this, \"collapsedClick\", 7);\n    this.inheritedAttributes = {};\n    /** @internal */\n    this.collapsed = false;\n    /**\n     * If `true`, the breadcrumb will take on a different look to show that\n     * it is the currently active breadcrumb. Defaults to `true` for the\n     * last breadcrumb if it is not set on any.\n     */\n    this.active = false;\n    /**\n     * If `true`, the user cannot interact with the breadcrumb.\n     */\n    this.disabled = false;\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.collapsedIndicatorClick = () => {\n      this.collapsedClick.emit({ ionShadowTarget: this.collapsedRef });\n    };\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  isClickable() {\n    return this.href !== undefined;\n  }\n  render() {\n    const { color, active, collapsed, disabled, download, el, inheritedAttributes, last, routerAnimation, routerDirection, separator, showCollapsedIndicator, target, } = this;\n    const clickable = this.isClickable();\n    const TagType = this.href === undefined ? 'span' : 'a';\n    // Links can still be tabbed to when set to disabled if they have an href\n    // in order to truly disable them we can keep it as an anchor but remove the href\n    const href = disabled ? undefined : this.href;\n    const mode = getIonMode(this);\n    const attrs = TagType === 'span'\n      ? {}\n      : {\n        download,\n        href,\n        target,\n      };\n    // If the breadcrumb is collapsed, check if it contains the collapsed indicator\n    // to show the separator as long as it isn't also the last breadcrumb\n    // otherwise if not collapsed use the value in separator\n    const showSeparator = last ? false : collapsed ? (showCollapsedIndicator && !last ? true : false) : separator;\n    return (h(Host, { onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation), \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        'breadcrumb-active': active,\n        'breadcrumb-collapsed': collapsed,\n        'breadcrumb-disabled': disabled,\n        'in-breadcrumbs-color': hostContext('ion-breadcrumbs[color]', el),\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': clickable,\n        'ion-focusable': clickable,\n      }) }, h(TagType, Object.assign({}, attrs, { class: \"breadcrumb-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"slot\", { name: \"start\" }), h(\"slot\", null), h(\"slot\", { name: \"end\" })), showCollapsedIndicator && (h(\"button\", { part: \"collapsed-indicator\", onClick: () => this.collapsedIndicatorClick(), ref: (collapsedEl) => (this.collapsedRef = collapsedEl), class: {\n        'breadcrumbs-collapsed-indicator': true,\n      } }, h(\"ion-icon\", { icon: ellipsisHorizontal, lazy: false }))), showSeparator && (\n    /**\n     * Separators should not be announced by narrators.\n     * We add aria-hidden on the span so that this applies\n     * to any custom separators too.\n     */\n    h(\"span\", { class: \"breadcrumb-separator\", part: \"separator\", \"aria-hidden\": \"true\" }, h(\"slot\", { name: \"separator\" }, mode === 'ios' ? (h(\"ion-icon\", { icon: chevronForwardOutline, lazy: false, \"flip-rtl\": true })) : (h(\"span\", null, \"/\")))))));\n  }\n  get el() { return getElement(this); }\n};\nBreadcrumb.style = {\n  ios: breadcrumbIosCss,\n  md: breadcrumbMdCss\n};\n\nconst breadcrumbsIosCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:20px;padding-right:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}\";\n\nconst breadcrumbsMdCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Breadcrumbs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionCollapsedClick = createEvent(this, \"ionCollapsedClick\", 7);\n    /**\n     * The number of breadcrumbs to show before the collapsed indicator.\n     * If `itemsBeforeCollapse` + `itemsAfterCollapse` is greater than `maxItems`,\n     * the breadcrumbs will not be collapsed.\n     */\n    this.itemsBeforeCollapse = 1;\n    /**\n     * The number of breadcrumbs to show after the collapsed indicator.\n     * If `itemsBeforeCollapse` + `itemsAfterCollapse` is greater than `maxItems`,\n     * the breadcrumbs will not be collapsed.\n     */\n    this.itemsAfterCollapse = 1;\n    this.breadcrumbsInit = () => {\n      this.setBreadcrumbSeparator();\n      this.setMaxItems();\n    };\n    this.resetActiveBreadcrumb = () => {\n      const breadcrumbs = this.getBreadcrumbs();\n      // Only reset the active breadcrumb if we were the ones to change it\n      // otherwise use the one set on the component\n      const activeBreadcrumb = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n      if (activeBreadcrumb && this.activeChanged) {\n        activeBreadcrumb.active = false;\n      }\n    };\n    this.setMaxItems = () => {\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n      const breadcrumbs = this.getBreadcrumbs();\n      for (const breadcrumb of breadcrumbs) {\n        breadcrumb.showCollapsedIndicator = false;\n        breadcrumb.collapsed = false;\n      }\n      // If the number of breadcrumbs exceeds the maximum number of items\n      // that should show and the items before / after collapse do not\n      // exceed the maximum items then we need to collapse the breadcrumbs\n      const shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;\n      if (shouldCollapse) {\n        // Show the collapsed indicator in the first breadcrumb that collapses\n        breadcrumbs.forEach((breadcrumb, index) => {\n          if (index === itemsBeforeCollapse) {\n            breadcrumb.showCollapsedIndicator = true;\n          }\n          // Collapse all breadcrumbs that have an index greater than or equal to\n          // the number before collapse and an index less than the total number\n          // of breadcrumbs minus the items that should show after the collapse\n          if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {\n            breadcrumb.collapsed = true;\n          }\n        });\n      }\n    };\n    this.setBreadcrumbSeparator = () => {\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n      const breadcrumbs = this.getBreadcrumbs();\n      // Check if an active breadcrumb exists already\n      const active = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n      // Set the separator on all but the last breadcrumb\n      for (const breadcrumb of breadcrumbs) {\n        // The only time the last breadcrumb changes is when\n        // itemsAfterCollapse is set to 0, in this case the\n        // last breadcrumb will be the collapsed indicator\n        const last = maxItems !== undefined && itemsAfterCollapse === 0\n          ? breadcrumb === breadcrumbs[itemsBeforeCollapse]\n          : breadcrumb === breadcrumbs[breadcrumbs.length - 1];\n        breadcrumb.last = last;\n        // If the breadcrumb has defined whether or not to show the\n        // separator then use that value, otherwise check if it's the\n        // last breadcrumb\n        const separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;\n        breadcrumb.separator = separator;\n        // If there is not an active breadcrumb already\n        // set the last one to active\n        if (!active && last) {\n          breadcrumb.active = true;\n          this.activeChanged = true;\n        }\n      }\n    };\n    this.getBreadcrumbs = () => {\n      return Array.from(this.el.querySelectorAll('ion-breadcrumb'));\n    };\n  }\n  onCollapsedClick(ev) {\n    const breadcrumbs = this.getBreadcrumbs();\n    const collapsedBreadcrumbs = breadcrumbs.filter((breadcrumb) => breadcrumb.collapsed);\n    this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), { collapsedBreadcrumbs }));\n  }\n  maxItemsChanged() {\n    this.resetActiveBreadcrumb();\n    this.breadcrumbsInit();\n  }\n  componentWillLoad() {\n    this.breadcrumbsInit();\n  }\n  render() {\n    const { color, collapsed } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'breadcrumbs-collapsed': collapsed,\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"maxItems\": [\"maxItemsChanged\"],\n    \"itemsBeforeCollapse\": [\"maxItemsChanged\"],\n    \"itemsAfterCollapse\": [\"maxItemsChanged\"]\n  }; }\n};\nBreadcrumbs.style = {\n  ios: breadcrumbsIosCss,\n  md: breadcrumbsMdCss\n};\n\nexport { Breadcrumb as ion_breadcrumb, Breadcrumbs as ion_breadcrumbs };\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,WAArC,EAAkDC,CAAlD,EAAqDC,CAAC,IAAIC,IAA1D,EAAgEC,CAAC,IAAIC,UAArE,QAAuF,qBAAvF;AACA,SAASC,CAAC,IAAIC,qBAAd,EAAqCC,CAAC,IAAIC,kBAA1C,QAAoE,qBAApE;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,4BAAhC;AACA,SAASP,CAAC,IAAIQ,qBAAd,QAA2C,uBAA3C;AACA,SAASC,CAAC,IAAIC,OAAd,EAAuBC,CAAC,IAAIC,kBAA5B,EAAgDf,CAAC,IAAIgB,WAArD,QAAwE,qBAAxE;AAEA,IAAMC,gBAAgB,GAAG,o8IAAzB;AAEA,IAAMC,eAAe,GAAG,6/IAAxB;;AAEA,IAAMC,UAAU;EACd,oBAAYC,OAAZ,EAAqB;IAAA;;IAAA;;IACnBvB,gBAAgB,CAAC,IAAD,EAAOuB,OAAP,CAAhB;IACA,KAAKC,QAAL,GAAgBtB,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;IACA,KAAKuB,OAAL,GAAevB,WAAW,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,CAA1B;IACA,KAAKwB,cAAL,GAAsBxB,WAAW,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,CAAjC;IACA,KAAKyB,mBAAL,GAA2B,EAA3B;IACA;;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,MAAL,GAAc,KAAd;IACA;AACJ;AACA;;IACI,KAAKC,QAAL,GAAgB,KAAhB;IACA;AACJ;AACA;AACA;;IACI,KAAKC,eAAL,GAAuB,SAAvB;;IACA,KAAKC,OAAL,GAAe,YAAM;MACnB,KAAI,CAACR,QAAL,CAAcS,IAAd;IACD,CAFD;;IAGA,KAAKC,MAAL,GAAc,YAAM;MAClB,KAAI,CAACT,OAAL,CAAaQ,IAAb;IACD,CAFD;;IAGA,KAAKE,uBAAL,GAA+B,YAAM;MACnC,KAAI,CAACT,cAAL,CAAoBO,IAApB,CAAyB;QAAEG,eAAe,EAAE,KAAI,CAACC;MAAxB,CAAzB;IACD,CAFD;EAGD;;EAjCa;IAAA;IAAA,OAkCd,6BAAoB;MAClB,KAAKV,mBAAL,GAA2Bb,qBAAqB,CAAC,KAAKwB,EAAN,CAAhD;IACD;EApCa;IAAA;IAAA,OAqCd,uBAAc;MACZ,OAAO,KAAKC,IAAL,KAAcC,SAArB;IACD;EAvCa;IAAA;IAAA,OAwCd,kBAAS;MAAA;MAAA;;MACP,IAAQC,KAAR,GAAsK,IAAtK,CAAQA,KAAR;MAAA,IAAeZ,MAAf,GAAsK,IAAtK,CAAeA,MAAf;MAAA,IAAuBD,SAAvB,GAAsK,IAAtK,CAAuBA,SAAvB;MAAA,IAAkCE,QAAlC,GAAsK,IAAtK,CAAkCA,QAAlC;MAAA,IAA4CY,QAA5C,GAAsK,IAAtK,CAA4CA,QAA5C;MAAA,IAAsDJ,EAAtD,GAAsK,IAAtK,CAAsDA,EAAtD;MAAA,IAA0DX,mBAA1D,GAAsK,IAAtK,CAA0DA,mBAA1D;MAAA,IAA+EgB,IAA/E,GAAsK,IAAtK,CAA+EA,IAA/E;MAAA,IAAqFC,eAArF,GAAsK,IAAtK,CAAqFA,eAArF;MAAA,IAAsGb,eAAtG,GAAsK,IAAtK,CAAsGA,eAAtG;MAAA,IAAuHc,SAAvH,GAAsK,IAAtK,CAAuHA,SAAvH;MAAA,IAAkIC,sBAAlI,GAAsK,IAAtK,CAAkIA,sBAAlI;MAAA,IAA0JC,MAA1J,GAAsK,IAAtK,CAA0JA,MAA1J;MACA,IAAMC,SAAS,GAAG,KAAKC,WAAL,EAAlB;MACA,IAAMC,OAAO,GAAG,KAAKX,IAAL,KAAcC,SAAd,GAA0B,MAA1B,GAAmC,GAAnD,CAHO,CAIP;MACA;;MACA,IAAMD,IAAI,GAAGT,QAAQ,GAAGU,SAAH,GAAe,KAAKD,IAAzC;MACA,IAAMY,IAAI,GAAGtC,UAAU,CAAC,IAAD,CAAvB;MACA,IAAMuC,KAAK,GAAGF,OAAO,KAAK,MAAZ,GACV,EADU,GAEV;QACAR,QAAQ,EAARA,QADA;QAEAH,IAAI,EAAJA,IAFA;QAGAQ,MAAM,EAANA;MAHA,CAFJ,CARO,CAeP;MACA;MACA;;MACA,IAAMM,aAAa,GAAGV,IAAI,GAAG,KAAH,GAAWf,SAAS,GAAIkB,sBAAsB,IAAI,CAACH,IAA3B,GAAkC,IAAlC,GAAyC,KAA7C,GAAsDE,SAApG;MACA,OAAQ1C,CAAC,CAACE,IAAD,EAAO;QAAEiD,OAAO,EAAE,iBAACC,EAAD;UAAA,OAAQvC,OAAO,CAACuB,IAAD,EAAOgB,EAAP,EAAWxB,eAAX,EAA4Ba,eAA5B,CAAf;QAAA,CAAX;QAAwE,iBAAiBd,QAAQ,GAAG,MAAH,GAAY,IAA7G;QAAmH0B,KAAK,EAAEtC,kBAAkB,CAACuB,KAAD,kEACvJU,IADuJ,EAChJ,IADgJ,wCAExJ,mBAFwJ,EAEnItB,MAFmI,wCAGxJ,sBAHwJ,EAGhID,SAHgI,wCAIxJ,qBAJwJ,EAIjIE,QAJiI,wCAKxJ,sBALwJ,EAKhIX,WAAW,CAAC,wBAAD,EAA2BmB,EAA3B,CALqH,wCAMxJ,YANwJ,EAM1InB,WAAW,CAAC,aAAD,EAAgB,KAAKmB,EAArB,CAN+H,wCAOxJ,kBAPwJ,EAOpInB,WAAW,CAAC,oBAAD,EAAuB,KAAKmB,EAA5B,CAPyH,wCAQxJ,iBARwJ,EAQrIU,SARqI,wCASxJ,eATwJ,EASvIA,SATuI;MAA5I,CAAP,EAUD7C,CAAC,CAAC+C,OAAD,EAAUO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;QAAEI,KAAK,EAAE,mBAAT;QAA8BG,IAAI,EAAE,QAApC;QAA8C7B,QAAQ,EAAEA,QAAxD;QAAkEE,OAAO,EAAE,KAAKA,OAAhF;QAAyFE,MAAM,EAAE,KAAKA;MAAtG,CAAzB,EAAyIP,mBAAzI,CAAV,EAAyKxB,CAAC,CAAC,MAAD,EAAS;QAAEyD,IAAI,EAAE;MAAR,CAAT,CAA1K,EAAuMzD,CAAC,CAAC,MAAD,EAAS,IAAT,CAAxM,EAAwNA,CAAC,CAAC,MAAD,EAAS;QAAEyD,IAAI,EAAE;MAAR,CAAT,CAAzN,CAVA,EAUqPd,sBAAsB,IAAK3C,CAAC,CAAC,QAAD,EAAW;QAAEwD,IAAI,EAAE,qBAAR;QAA+BL,OAAO,EAAE;UAAA,OAAM,MAAI,CAACnB,uBAAL,EAAN;QAAA,CAAxC;QAA8E0B,GAAG,EAAE,aAACC,WAAD;UAAA,OAAkB,MAAI,CAACzB,YAAL,GAAoByB,WAAtC;QAAA,CAAnF;QAAuIN,KAAK,EAAE;UAC/a,mCAAmC;QAD4Y;MAA9I,CAAX,EAEnRrD,CAAC,CAAC,UAAD,EAAa;QAAE4D,IAAI,EAAEpD,kBAAR;QAA4BqD,IAAI,EAAE;MAAlC,CAAb,CAFkR,CAVjR,EAY0DX,aAAa;MAChF;AACJ;AACA;AACA;AACA;MACIlD,CAAC,CAAC,MAAD,EAAS;QAAEqD,KAAK,EAAE,sBAAT;QAAiCG,IAAI,EAAE,WAAvC;QAAoD,eAAe;MAAnE,CAAT,EAAsFxD,CAAC,CAAC,MAAD,EAAS;QAAEyD,IAAI,EAAE;MAAR,CAAT,EAAgCT,IAAI,KAAK,KAAT,GAAkBhD,CAAC,CAAC,UAAD,EAAa;QAAE4D,IAAI,EAAEtD,qBAAR;QAA+BuD,IAAI,EAAE,KAArC;QAA4C,YAAY;MAAxD,CAAb,CAAnB,GAAoG7D,CAAC,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CAArI,CAAvF,CAlBQ,CAAT;IAmBD;EA9Ea;IAAA;IAAA,KA+Ed,eAAS;MAAE,OAAOI,UAAU,CAAC,IAAD,CAAjB;IAA0B;EA/EvB;;EAAA;AAAA,GAAhB;;AAiFAe,UAAU,CAAC2C,KAAX,GAAmB;EACjBC,GAAG,EAAE9C,gBADY;EAEjB+C,EAAE,EAAE9C;AAFa,CAAnB;AAKA,IAAM+C,iBAAiB,GAAG,uyBAA1B;AAEA,IAAMC,gBAAgB,GAAG,qvBAAzB;;AAEA,IAAMC,WAAW;EACf,qBAAY/C,OAAZ,EAAqB;IAAA;;IAAA;;IACnBvB,gBAAgB,CAAC,IAAD,EAAOuB,OAAP,CAAhB;IACA,KAAKgD,iBAAL,GAAyBrE,WAAW,CAAC,IAAD,EAAO,mBAAP,EAA4B,CAA5B,CAApC;IACA;AACJ;AACA;AACA;AACA;;IACI,KAAKsE,mBAAL,GAA2B,CAA3B;IACA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,kBAAL,GAA0B,CAA1B;;IACA,KAAKC,eAAL,GAAuB,YAAM;MAC3B,MAAI,CAACC,sBAAL;;MACA,MAAI,CAACC,WAAL;IACD,CAHD;;IAIA,KAAKC,qBAAL,GAA6B,YAAM;MACjC,IAAMC,WAAW,GAAG,MAAI,CAACC,cAAL,EAApB,CADiC,CAEjC;MACA;;;MACA,IAAMC,gBAAgB,GAAGF,WAAW,CAACG,IAAZ,CAAiB,UAACC,UAAD;QAAA,OAAgBA,UAAU,CAACrD,MAA3B;MAAA,CAAjB,CAAzB;;MACA,IAAImD,gBAAgB,IAAI,MAAI,CAACG,aAA7B,EAA4C;QAC1CH,gBAAgB,CAACnD,MAAjB,GAA0B,KAA1B;MACD;IACF,CARD;;IASA,KAAK+C,WAAL,GAAmB,YAAM;MACvB,IAAQH,kBAAR,GAA8D,MAA9D,CAAQA,kBAAR;MAAA,IAA4BD,mBAA5B,GAA8D,MAA9D,CAA4BA,mBAA5B;MAAA,IAAiDY,QAAjD,GAA8D,MAA9D,CAAiDA,QAAjD;;MACA,IAAMN,WAAW,GAAG,MAAI,CAACC,cAAL,EAApB;;MAFuB,2CAGED,WAHF;MAAA;;MAAA;QAGvB,oDAAsC;UAAA,IAA3BI,UAA2B;UACpCA,UAAU,CAACpC,sBAAX,GAAoC,KAApC;UACAoC,UAAU,CAACtD,SAAX,GAAuB,KAAvB;QACD,CANsB,CAOvB;QACA;QACA;;MATuB;QAAA;MAAA;QAAA;MAAA;;MAUvB,IAAMyD,cAAc,GAAGD,QAAQ,KAAK5C,SAAb,IAA0BsC,WAAW,CAACQ,MAAZ,GAAqBF,QAA/C,IAA2DZ,mBAAmB,GAAGC,kBAAtB,IAA4CW,QAA9H;;MACA,IAAIC,cAAJ,EAAoB;QAClB;QACAP,WAAW,CAACS,OAAZ,CAAoB,UAACL,UAAD,EAAaM,KAAb,EAAuB;UACzC,IAAIA,KAAK,KAAKhB,mBAAd,EAAmC;YACjCU,UAAU,CAACpC,sBAAX,GAAoC,IAApC;UACD,CAHwC,CAIzC;UACA;UACA;;;UACA,IAAI0C,KAAK,IAAIhB,mBAAT,IAAgCgB,KAAK,GAAGV,WAAW,CAACQ,MAAZ,GAAqBb,kBAAjE,EAAqF;YACnFS,UAAU,CAACtD,SAAX,GAAuB,IAAvB;UACD;QACF,CAVD;MAWD;IACF,CAzBD;;IA0BA,KAAK+C,sBAAL,GAA8B,YAAM;MAClC,IAAQF,kBAAR,GAA8D,MAA9D,CAAQA,kBAAR;MAAA,IAA4BD,mBAA5B,GAA8D,MAA9D,CAA4BA,mBAA5B;MAAA,IAAiDY,QAAjD,GAA8D,MAA9D,CAAiDA,QAAjD;;MACA,IAAMN,WAAW,GAAG,MAAI,CAACC,cAAL,EAApB,CAFkC,CAGlC;;;MACA,IAAMlD,MAAM,GAAGiD,WAAW,CAACG,IAAZ,CAAiB,UAACC,UAAD;QAAA,OAAgBA,UAAU,CAACrD,MAA3B;MAAA,CAAjB,CAAf,CAJkC,CAKlC;;MALkC,4CAMTiD,WANS;MAAA;;MAAA;QAMlC,uDAAsC;UAAA,IAA3BI,UAA2B;UACpC;UACA;UACA;UACA,IAAMvC,IAAI,GAAGyC,QAAQ,KAAK5C,SAAb,IAA0BiC,kBAAkB,KAAK,CAAjD,GACTS,UAAU,KAAKJ,WAAW,CAACN,mBAAD,CADjB,GAETU,UAAU,KAAKJ,WAAW,CAACA,WAAW,CAACQ,MAAZ,GAAqB,CAAtB,CAF9B;UAGAJ,UAAU,CAACvC,IAAX,GAAkBA,IAAlB,CAPoC,CAQpC;UACA;UACA;;UACA,IAAME,SAAS,GAAGqC,UAAU,CAACrC,SAAX,KAAyBL,SAAzB,GAAqC0C,UAAU,CAACrC,SAAhD,GAA4DF,IAAI,GAAGH,SAAH,GAAe,IAAjG;UACA0C,UAAU,CAACrC,SAAX,GAAuBA,SAAvB,CAZoC,CAapC;UACA;;UACA,IAAI,CAAChB,MAAD,IAAWc,IAAf,EAAqB;YACnBuC,UAAU,CAACrD,MAAX,GAAoB,IAApB;YACA,MAAI,CAACsD,aAAL,GAAqB,IAArB;UACD;QACF;MAzBiC;QAAA;MAAA;QAAA;MAAA;IA0BnC,CA1BD;;IA2BA,KAAKJ,cAAL,GAAsB,YAAM;MAC1B,OAAOU,KAAK,CAACC,IAAN,CAAW,MAAI,CAACpD,EAAL,CAAQqD,gBAAR,CAAyB,gBAAzB,CAAX,CAAP;IACD,CAFD;EAGD;;EArFc;IAAA;IAAA,OAsFf,0BAAiBpC,EAAjB,EAAqB;MACnB,IAAMuB,WAAW,GAAG,KAAKC,cAAL,EAApB;MACA,IAAMa,oBAAoB,GAAGd,WAAW,CAACe,MAAZ,CAAmB,UAACX,UAAD;QAAA,OAAgBA,UAAU,CAACtD,SAA3B;MAAA,CAAnB,CAA7B;MACA,KAAK2C,iBAAL,CAAuBtC,IAAvB,CAA4BwB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,EAAE,CAACuC,MAArB,CAAd,EAA4C;QAAEF,oBAAoB,EAApBA;MAAF,CAA5C,CAA5B;IACD;EA1Fc;IAAA;IAAA,OA2Ff,2BAAkB;MAChB,KAAKf,qBAAL;MACA,KAAKH,eAAL;IACD;EA9Fc;IAAA;IAAA,OA+Ff,6BAAoB;MAClB,KAAKA,eAAL;IACD;EAjGc;IAAA;IAAA,OAkGf,kBAAS;MAAA;;MACP,IAAQjC,KAAR,GAA6B,IAA7B,CAAQA,KAAR;MAAA,IAAeb,SAAf,GAA6B,IAA7B,CAAeA,SAAf;MACA,IAAMuB,IAAI,GAAGtC,UAAU,CAAC,IAAD,CAAvB;MACA,OAAQV,CAAC,CAACE,IAAD,EAAO;QAAEmD,KAAK,EAAEtC,kBAAkB,CAACuB,KAAD,oEACtCU,IADsC,EAC/B,IAD+B,yCAEvC,YAFuC,EAEzBhC,WAAW,CAAC,aAAD,EAAgB,KAAKmB,EAArB,CAFc,yCAGvC,kBAHuC,EAGnBnB,WAAW,CAAC,oBAAD,EAAuB,KAAKmB,EAA5B,CAHQ,yCAIvC,uBAJuC,EAIdV,SAJc;MAA3B,CAAP,EAKDzB,CAAC,CAAC,MAAD,EAAS,IAAT,CALA,CAAT;IAMD;EA3Gc;IAAA;IAAA,KA4Gf,eAAS;MAAE,OAAOI,UAAU,CAAC,IAAD,CAAjB;IAA0B;EA5GtB;IAAA;IAAA,KA6Gf,eAAsB;MAAE,OAAO;QAC7B,YAAY,CAAC,iBAAD,CADiB;QAE7B,uBAAuB,CAAC,iBAAD,CAFM;QAG7B,sBAAsB,CAAC,iBAAD;MAHO,CAAP;IAIpB;EAjHW;;EAAA;AAAA,GAAjB;;AAmHA+D,WAAW,CAACL,KAAZ,GAAoB;EAClBC,GAAG,EAAEE,iBADa;EAElBD,EAAE,EAAEE;AAFc,CAApB;AAKA,SAAS/C,UAAU,IAAIyE,cAAvB,EAAuCzB,WAAW,IAAI0B,eAAtD"},"metadata":{},"sourceType":"module"}