{"version":3,"sources":["webpack:///src/app/pages/checkout/checkout-routing.module.ts","webpack:///src/app/pages/checkout/checkout.module.ts","webpack:///src/app/pages/checkout/checkout.page.ts","webpack:///src/app/pages/checkout/checkout.page.scss","webpack:///src/app/pages/checkout/checkout.page.html"],"names":["routes","path","component","CheckoutPage","CheckoutPageRoutingModule","NgModule","imports","RouterModule","exports","CheckoutPageModule","CommonModule","FormsModule","IonicModule","declarations","cartService","storage","paymentGateway","subTotal","cartTotal","products","BrazilianStates","environment","finalTax","math","Math","isPersonalUp","isBillingUp","isShippingUp","isPaymentUp","sameShipping","getAllPaymentGateways","pipe","map","pg","filter","p","enabled","subscribe","console","log","cartData","data","productData","total","get","then","userData","userDetails","getTaxes","taxes","t","rate","taxRate","parseInt","taxesRate","taxCalculation","floor","abs","err","error","section","checkoutForm","value","user","lineItems","forEach","push","product_id","id","quantity","String","in_cart","formData","set_paid","payment_method","payment_method_title","method_title","customer_id","billing","address_1","b_address_line_1","address_2","b_address_line_2","city","b_city","state","b_state","country","postcode","b_postcode","first_name","last_name","email","phone","shipping","line_items","s_address_line_1","s_address_line_2","s_city","s_state","s_postcode","createOrder","CartService","Storage","Component","selector","template"],"mappings":"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","file":"src_app_pages_checkout_checkout_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckoutPage } from './checkout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckoutPageRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutPageRoutingModule } from './checkout-routing.module';\n\nimport { CheckoutPage } from './checkout.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CheckoutPageRoutingModule\n  ],\n  declarations: [CheckoutPage]\n})\nexport class CheckoutPageModule {}","import { Component, OnInit, Self, Input } from '@angular/core';\nimport {CheckboxControlValueAccessor, CheckboxRequiredValidator, NgForm} from '@angular/forms';\nimport {CartService} from '../../services/cart.service';\nimport {map} from 'rxjs/operators';\nimport {Storage} from '@ionic/storage-angular';\nimport {environment} from '../../../environments/environment';\nimport {ProductModel} from \"../../models/product-model\";\nimport {CustomerModel} from \"../../models/customerModel\";\nimport {OrderModel} from \"../../models/orderModel\";\nimport { InputType } from 'zlib';\n\n@Component({\n    selector: 'app-checkout',\n    templateUrl: './checkout.page.html',\n    styleUrls: ['./checkout.page.scss'],\n})\nexport class CheckoutPage implements OnInit {\n\n    constructor(public cartService: CartService,\n                private storage: Storage) {\n    }\n\n    isPersonalUp: boolean;\n    isBillingUp: boolean;\n    isShippingUp: boolean;\n    isPaymentUp: boolean;\n    sameShipping: boolean;\n    paymentGateway: PaymentGateway[] = [];\n    subTotal = 0;\n    cartTotal = 0;\n    products: ProductModel[] = [];\n    userDetails: CustomerModel;\n    BrazilianStates = environment.states;\n    taxesRate: number;\n    finalTax = 0;\n    math = Math;\n\n    async ngOnInit() {\n        this.isPersonalUp = false;\n        this.isBillingUp = false;\n        this.isShippingUp = false;\n        this.isPaymentUp = false;\n        this.sameShipping = true;\n\n        this.cartService.getAllPaymentGateways()\n            .pipe(\n                map((pg: PaymentGateway[]) => pg.filter(p => p.enabled === true))\n            ).subscribe(pg => {\n            this.paymentGateway = pg;\n            console.log(this.paymentGateway);\n        });\n\n        this.cartService.cartData.subscribe(data => this.products = data.productData);\n\n        this.cartService.cartTotal.subscribe(total => this.cartTotal = total);\n\n        this.storage.get('user').then(userData => this.userDetails = userData);\n\n\n        this.cartService.getTaxes()\n            .pipe(\n                map((taxes: any[]) => taxes.map(t => t.rate))\n            )\n            .subscribe(data => {\n                let taxRate: number;\n                // @ts-ignore\n                taxRate = parseInt(data, 10);\n                this.taxesRate = taxRate;\n                this.subTotal = this.cartTotal;\n                let taxCalculation = (this.taxesRate * this.subTotal) / 100;\n                if (taxCalculation < 1) {\n                    taxCalculation = 1;\n                    this.finalTax = taxCalculation;\n                } else {\n                    this.finalTax = Math.floor(Math.abs((this.taxesRate * this.subTotal) / 100));\n                }\n                this.cartTotal = this.subTotal + this.finalTax;\n            }, err => console.error(err));\n\n\n    }\n\n    toggleUp(section: string) {\n\n        switch (section) {\n            case 'billing':\n                this.isBillingUp = !this.isBillingUp;\n                break;\n            case 'shipping':\n                this.isShippingUp = !this.isShippingUp;\n                break;\n            case 'payment':\n                this.isPaymentUp = !this.isPaymentUp;\n                break;\n            default:\n                this.isPersonalUp = !this.isPersonalUp;\n                break;\n        }\n    }\n\n    toggleShipping() {\n        this.sameShipping = !this.sameShipping;\n    }\n\n    async checkout(checkoutForm: NgForm) {\n        const data = checkoutForm.value;\n        const user: CustomerModel = await this.storage.get('user');\n\n\n        const lineItems: LineItemsModel[] = [];\n        this.products.forEach(p => {\n            lineItems.push({\n                product_id: p.id,\n                quantity: parseInt(String(p.in_cart), 10)\n            });\n        });\n        let formData: OrderModel = null;\n\n        if (this.sameShipping) {\n            formData = {\n                set_paid: true,\n                payment_method: this.paymentGateway[0].id,\n                payment_method_title: this.paymentGateway[0].method_title,\n                customer_id: 0,\n                billing: {\n                    address_1: data.b_address_line_1,\n                    address_2: data.b_address_line_2,\n                    city: data.b_city,\n                    state: data.b_state,\n                    country: 'BR',\n                    postcode: data.b_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name,\n                    email: data.email,\n                    phone: data.phone,\n                },\n                shipping: {\n                    address_1: data.b_address_line_1,\n                    address_2: data.b_address_line_2,\n                    city: data.b_city,\n                    state: data.b_state,\n                    country: 'BR',\n                    postcode: data.b_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name\n                },\n                line_items: lineItems\n            };\n        } else {\n            formData = {\n                set_paid: true,\n                payment_method: this.paymentGateway[0].id,\n                payment_method_title: this.paymentGateway[0].method_title,\n                customer_id: 0,\n                billing: {\n                    address_1: data.b_address_line_1,\n                    address_2: data.b_address_line_2,\n                    city: data.b_city,\n                    state: data.b_state,\n                    country: 'BR',\n                    postcode: data.b_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name,\n                    email: data.email,\n                    phone: data.phone,\n                },\n                shipping: {\n                    address_1: data.s_address_line_1,\n                    address_2: data.s_address_line_2,\n                    city: data.s_city,\n                    state: data.s_state,\n                    country: 'BR',\n                    postcode: data.s_postcode,\n                    first_name: data.first_name,\n                    last_name: data.last_name\n                },\n                line_items: lineItems\n            };\n        }\n\n\n        // @ts-ignore\n        this.cartService.createOrder(formData).then();\n    }\n}\n\n\ninterface PaymentGateway {\n    description: string;\n    enabled: boolean;\n    title: string;\n    id: string;\n    method_description: string;\n    method_title: string;\n    \n    \n}\n\n// tslint:disable-next-line:class-name\nexport interface LineItemsModel {\n    product_id: number;\n    quantity: number;\n    variation_id?: number;\n} ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGVja291dC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"/tabs/tab3\\\">\\n        <ion-icon name=\\\"arrow-back-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-left\\\">Finalizar Compra</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form #checkoutForm=\\\"ngForm\\\">\\n    <ion-grid>\\n      <!-- Personal Details-->\\n      <ion-row>\\n        <ion-col>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n              <ion-label (click)=\\\"toggleUp('personal')\\\"\\n                         class=\\\"d-flex justify-content-between align-items-center\\\"\\n                         data-target=\\\"#personalDetails\\\" data-toggle=\\\"collapse\\\">\\n                <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #e5e5e5;\\\">Detalhes do Cliente</h2>\\n                <ion-icon (click)=\\\"toggleUp('personal')\\\" *ngIf=\\\"!isPersonalUp\\\"\\n                          class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#personalDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-down-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #e5e5e5;\\\"></ion-icon>\\n                <ion-icon (click)=\\\"toggleUp('personal')\\\" *ngIf=\\\"isPersonalUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#personalDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-up-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #e5e5e5;\\\"></ion-icon>\\n              </ion-label>\\n            </ion-list-header>\\n            <div class=\\\"collapse\\\" id=\\\"personalDetails\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Nome</ion-label>\\n                <ion-input #fname=\\\"ngModel\\\" name=\\\"first_name\\\" ngModel required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Sobrenome</ion-label>\\n                <ion-input #lname=\\\"ngModel\\\" name=\\\"last_name\\\" ngModel required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">E-mail</ion-label>\\n                <ion-input #email=\\\"ngModel\\\" name=\\\"email\\\" ngModel required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Telefone</ion-label>\\n                <ion-input #phone=\\\"ngModel\\\" name=\\\"phone\\\" ngModel required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Billing Details-->\\n      <ion-row>\\n        <ion-col>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n              <ion-label (click)=\\\"toggleUp('billing')\\\"\\n                         class=\\\"d-flex justify-content-between align-items-center\\\"\\n                         data-target=\\\"#billingDetails\\\" data-toggle=\\\"collapse\\\">\\n                <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #fff;\\\">Endereço de Cobrança</h2>\\n                <ion-icon (click)=\\\"toggleUp('billing')\\\" *ngIf=\\\"!isBillingUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#billingDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-down-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #fff;\\\"></ion-icon>\\n                <ion-icon (click)=\\\"toggleUp('billing')\\\" *ngIf=\\\"isBillingUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#billingDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-up-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #fff;\\\"></ion-icon>\\n              </ion-label>\\n            </ion-list-header>\\n\\n\\n            <ion-item class=\\\"collapse\\\" id=\\\"billingDetails\\\">\\n              <ion-label position=\\\"stacked\\\">Endereço</ion-label>\\n              <ion-input #b_address_line_1=\\\"ngModel\\\" name=\\\"b_address_line_1\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Complemento</ion-label>\\n              <ion-input #b_address_line_2=\\\"ngModel\\\" name=\\\"b_address_line_2\\\" ngModel\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Cidade</ion-label>\\n              <ion-input #b_city=\\\"ngModel\\\" name=\\\"b_city\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Estado</ion-label>\\n              <ion-select #b_state=\\\"ngModel\\\" name=\\\"b_state\\\" ngModel placeholder=\\\"Selecione o estado\\\"  required>\\n                <ion-select-option *ngFor=\\\"let s of BrazilianStates; index as i\\\"\\n                                   [value]=\\\"s.value\\\">{{ s.name }}</ion-select-option>\\n              </ion-select>\\n              <ion-label position=\\\"stacked\\\">CEP</ion-label>\\n              <ion-input #b_postcode=\\\"ngModel\\\" name=\\\"b_postcode\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Checkbox-->\\n      <ion-row>\\n        <ion-col>\\n          <ion-item style=\\\"border: 1px solid lightgray;\\\">\\n            <ion-checkbox (ionChange)=\\\"toggleShipping()\\\" [checked]=\\\"sameShipping\\\" color=\\\"dark\\\"\\n                          slot=\\\"start\\\"></ion-checkbox>\\n            <ion-label>Entregar no endereço de cobrança</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Shipping Details-->\\n      <ion-row *ngIf=\\\"!sameShipping\\\">\\n        <ion-col>\\n          <ion-list lines=\\\"full\\\">\\n            <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n              <ion-label (click)=\\\"toggleUp('shipping')\\\"\\n                         class=\\\"d-flex justify-content-between align-items-center\\\"\\n                         data-target=\\\"#shippingDetails\\\" data-toggle=\\\"collapse\\\">\\n                <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #350303;\\\">Endereço de Entrega</h2>\\n                <ion-icon (click)=\\\"toggleUp('shipping')\\\" *ngIf=\\\"!isShippingUp\\\"\\n                          class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#shippingDetails\\\" data-toggle=\\\"collapse\\\"\\n                          name=\\\"chevron-down-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #3f1ce0;\\\"></ion-icon>\\n                <ion-icon (click)=\\\"toggleUp('shipping')\\\" *ngIf=\\\"isShippingUp\\\" class=\\\"justify-self-start\\\"\\n                          data-target=\\\"#shippingDetails\\\"\\n                          data-toggle=\\\"collapse\\\" name=\\\"chevron-up-outline\\\"\\n                          size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #3f1ce0;\\\"></ion-icon>\\n              </ion-label>\\n            </ion-list-header>\\n\\n\\n            <ion-item class=\\\"collapse\\\" id=\\\"shippingDetails\\\">\\n              <ion-label position=\\\"stacked\\\">Endereço</ion-label>\\n              <ion-input #s_address_line_1=\\\"ngModel\\\" name=\\\"s_address_line_1\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Complemento</ion-label>\\n              <ion-input #s_address_line_2=\\\"ngModel\\\" name=\\\"s_address_line_2\\\" ngModel\\n                         type=\\\"text\\\"></ion-input>\\n              <ion-label position=\\\"stacked\\\">Cidade</ion-label>\\n              <ion-input #s_city=\\\"ngModel\\\" name=\\\"s_city\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n\\n              <ion-select #s_state=\\\"ngModel\\\" name=\\\"s_state\\\" ngModel placeholder=\\\"Selecione o estado\\\" required>\\n                <ion-select-option *ngFor=\\\"let s of BrazilianStates; index as i\\\"\\n                                   [value]=\\\"s.value\\\">{{ s.name }}</ion-select-option>\\n              </ion-select>\\n              <ion-label position=\\\"stacked\\\">CEP</ion-label>\\n              <ion-input #s_postcode=\\\"ngModel\\\" name=\\\"s_postcode\\\" ngModel required\\n                         type=\\\"text\\\"></ion-input>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n    </ion-grid>\\n  </form>\\n\\n  <ion-grid>\\n    <!-- Payment Details-->\\n    <ion-row>\\n      <ion-col>\\n        <ion-list *ngIf=\\\"paymentGateway.length > 0\\\" lines=\\\"full\\\">\\n          <ion-list-header color=\\\"dark\\\" lines=\\\"full\\\" slot=\\\"start\\\">\\n            <ion-label (click)=\\\"toggleUp('payment')\\\"\\n                       class=\\\"d-flex justify-content-between align-items-center\\\"\\n                       data-target=\\\"#paymentDetails\\\" data-toggle=\\\"collapse\\\">\\n              <h2 class=\\\"ion-color-tertiary\\\" style=\\\"color: #f0f1dd;\\\">Opções de Pagamento </h2>\\n              <ion-icon (click)=\\\"toggleUp('payment')\\\" *ngIf=\\\"!isShippingUp\\\" class=\\\"justify-self-start\\\"\\n                        data-target=\\\"#shippingDetails\\\" data-toggle=\\\"collapse\\\"\\n                        name=\\\"chevron-down-outline\\\"\\n                        size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #f0f1dd;\\\"></ion-icon>\\n              <ion-icon (click)=\\\"toggleUp('payment')\\\" *ngIf=\\\"isShippingUp\\\" class=\\\"justify-self-start\\\"\\n                        data-target=\\\"#shippingDetails\\\"\\n                        data-toggle=\\\"collapse\\\" name=\\\"chevron-up-outline\\\"\\n                        size=\\\"medium\\\" slot=\\\"icon-only\\\" style=\\\"color: #f0f1dd;\\\"></ion-icon>\\n            </ion-label>\\n          </ion-list-header>\\n        </ion-list>\\n        <ion-item class=\\\"collapse\\\" id=\\\"paymentDetails\\\">\\n          <ion-checkbox checked\\n                        color=\\\"dark\\\"\\n                        readonly\\n                        slot=\\\"start\\\"></ion-checkbox>              \\n          <ion-label>\\n              {{ paymentGateway[0]?.title | uppercase}}\\n              <p>{{ paymentGateway[0]?.description}}</p> \\n              \\n          </ion-label>     \\n        </ion-item>\\n      </ion-col>\\n      <ion-col *ngIf=\\\"paymentGateway\\\" class=\\\"d-flex justify-content-center\\\">\\n       <!-- <ion-spinner color=\\\"dark\\\" name=\\\"dots\\\" size=\\\"large\\\"></ion-spinner>-->\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <!-- ORDER SUMMARY -->\\n    <ion-row>\\n      <ion-col>\\n        <ion-card class=\\\"ion-no-padding ion-no-margin\\\">\\n          <ion-card-header color=\\\"medium\\\">\\n            <ion-card-title>Resumo do Pedido</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\" routerLink=\\\"/tabs/tab3\\\">\\n                  SubTotal ({{(cartService.cartData | async).count }})\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-spinner name=\\\"bubbles\\\" *ngIf=\\\"!subTotal\\\"></ion-spinner>\\n                  <ion-text *ngIf=\\\"subTotal\\\">{{ subTotal | currency: 'R$' }}</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\">\\n                  Entrega\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-text>Frete Grátis</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\">\\n                  Taxas\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-spinner name=\\\"bubbles\\\" *ngIf=\\\"!finalTax\\\"></ion-spinner>\\n                  <ion-text *ngIf=\\\"finalTax\\\">{{ finalTax|currency:'R$'}}</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label slot=\\\"start\\\">\\n                  Total\\n                </ion-label>\\n                <ion-label slot=\\\"end\\\">\\n                  <ion-text>{{ cartTotal | currency: 'R$'}}</ion-text>\\n                </ion-label>\\n              </ion-item>\\n\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n\\n  <!--SUBMIT BUTTON-->\\n  <ion-row>\\n    <ion-col>\\n      <ion-button (click)=\\\"checkout(checkoutForm)\\\"\\n                  [disabled]=\\\"checkoutForm.invalid || checkoutForm.pending\\\"\\n                  color=\\\"dark\\\"\\n                  expand=\\\"full\\\"\\n                  fill=\\\"solid\\\"\\n                  size=\\\"large\\\"\\n                  type=\\\"submit\\\"\\n      >Finalizar Compra\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\";"]}